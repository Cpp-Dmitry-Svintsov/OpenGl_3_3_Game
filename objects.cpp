#include "objects.h"

//===========================================================================================================================
// class Project Tiles
//===========================================================================================================================
// destructor & constrcutor
//===========================================================================================================================
AProject_Tile::~AProject_Tile()
{
	delete Tile;
}
AProject_Tile::AProject_Tile(glm::mat4 model, glm::vec3 scale, glm::vec3 color)
{
	glm::vec3 pos = model[3];
	Tile = new ALite_Cube(pos, color, scale, model);
}

//===========================================================================================================================
// public section:
//===========================================================================================================================
void AProject_Tile::Update()
{
	Tile->Model = glm::translate(Tile->Model, glm::vec3(0.f, 0.f, Speed));
	Timer += AsSettings::Delta_Time;
	if (Timer > 6.f)
		Is_Alive = false;
}
void AProject_Tile::Draw(AShader& shader, ACamera& camera)
{
	Tile->Draw(shader, camera);
}

//===========================================================================================================================
glm::vec3 AProject_Tile::Get_Pos()
{
	return glm::vec3(Tile->Model[3]);
}

//===========================================================================================================================
